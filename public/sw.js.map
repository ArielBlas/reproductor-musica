{"version":3,"sources":["webpack://reproductor-musica/./src/sw.js"],"names":["CACHE_STATIC_NAME","CACHE_DYNAMIC_NAME","STATIC_FILES","self","addEventListener","event","console","log","waitUntil","caches","open","then","cache","addAll","request","url","indexOf","respondWith","match","response","fetch","res","put","clone","err"],"mappings":";;;;;;AACA,IAAIA,iBAAiB,GAAG,QAAxB;AACA,IAAIC,kBAAkB,GAAG,SAAzB;AACA,IAAIC,YAAY,GAAG,CACf,GADe,CAAnB;AAIAC,IAAI,CAACC,gBAAL,CAAsB,SAAtB,EAAiC,UAACC,KAAD,EAAW;AACxCC,SAAO,CAACC,GAAR,CAAY,gDAAZ,EAA8DF,KAA9D;AACAA,OAAK,CAACG,SAAN,CACIC,MAAM,CAACC,IAAP,CAAYV,iBAAZ,EACKW,IADL,CACU,UAACC,KAAD,EAAW;AACbN,WAAO,CAACC,GAAR,CAAY,uCAAZ;AACAK,SAAK,CAACC,MAAN,CAAaX,YAAb;AACH,GAJL,CADJ;AAOH,CATD;AAWAC,IAAI,CAACC,gBAAL,CAAsB,UAAtB,EAAkC,UAACC,KAAD,EAAW;AACzCC,SAAO,CAACC,GAAR,CAAY,gDAAZ,EAA8DF,KAA9D;AACH,CAFD;AAIAF,IAAI,CAACC,gBAAL,CAAsB,OAAtB,EAA+B,UAACC,KAAD,EAAW;AACtCC,SAAO,CAACC,GAAR,CAAY,8CAAZ,EAA4DF,KAA5D;AACA,MAAI,EAAEA,KAAK,CAACS,OAAN,CAAcC,GAAd,CAAkBC,OAAlB,CAA0B,MAA1B,MAAsC,CAAxC,CAAJ,EAAgD;AAEhDX,OAAK,CAACY,WAAN,CACIR,MAAM,CAACS,KAAP,CAAab,KAAK,CAACS,OAAnB,EACKH,IADL,CACU,UAACQ,QAAD,EAAc;AAChB,QAAIA,QAAJ,EAAa;AACT,aAAOA,QAAP;AACH,KAFD,MAEO;AACH,aAAOC,KAAK,CAACf,KAAK,CAACS,OAAP,CAAL,CACNH,IADM,CACD,UAACU,GAAD,EAAS;AACX,eAAOZ,MAAM,CAACC,IAAP,CAAYT,kBAAZ,EACFU,IADE,CACG,UAACC,KAAD,EAAW;AACbA,eAAK,IAAIA,KAAK,CAACU,GAAN,CAAUjB,KAAK,CAACS,OAAN,CAAcC,GAAxB,EAA6BM,GAAG,CAACE,KAAJ,EAA7B,CAAT;AACA,iBAAOF,GAAP;AACH,SAJE,CAAP;AAKH,OAPM,WAQA,UAACG,GAAD,EAAS;AACZ,eAAOf,MAAM,CAACC,IAAP,CAAYV,iBAAZ,EACFW,IADE,CACG,UAAAC,KAAK,EAAI;AACX,iBAAOA,KAAK,CAACM,KAAN,CAAY,eAAZ,CAAP;AACH,SAHE,CAAP;AAIH,OAbM,CAAP;AAcH;AACJ,GApBL,CADJ;AAuBH,CA3BD,E","file":"sw.js","sourcesContent":["\r\nvar CACHE_STATIC_NAME = 'static'\r\nvar CACHE_DYNAMIC_NAME = 'dynamic'\r\nvar STATIC_FILES = [\r\n    '/'\r\n]\r\n\r\nself.addEventListener('install', (event) => {\r\n    console.log('[Service Worker] Installing Service Worker ...', event);\r\n    event.waitUntil(\r\n        caches.open(CACHE_STATIC_NAME)\r\n            .then((cache) => {\r\n                console.log('[Service Worker] Precaching App Shell');\r\n                cache.addAll(STATIC_FILES);\r\n            })\r\n    )\r\n});\r\n\r\nself.addEventListener('activate', (event) => {\r\n    console.log('[Service Worker] Activating Service Worker ...', event);\r\n});\r\n\r\nself.addEventListener('fetch', (event) => {\r\n    console.log('[Service Worker] Fetching Service Worker ...', event);\r\n    if (!(event.request.url.indexOf('http') === 0)) return;\r\n\r\n    event.respondWith(\r\n        caches.match(event.request)\r\n            .then((response) => {\r\n                if (response){\r\n                    return response;\r\n                } else {\r\n                    return fetch(event.request)\r\n                    .then((res) => {\r\n                        return caches.open(CACHE_DYNAMIC_NAME)\r\n                            .then((cache) => {\r\n                                cache || cache.put(event.request.url, res.clone());\r\n                                return res;\r\n                            })\r\n                    })\r\n                    .catch((err) => {\r\n                        return caches.open(CACHE_STATIC_NAME)\r\n                            .then(cache => {\r\n                                return cache.match('/offline.html')\r\n                            })\r\n                    });\r\n                }\r\n            })\r\n    )\r\n});\r\n\r\n"],"sourceRoot":""}